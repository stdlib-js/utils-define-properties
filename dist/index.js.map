{
  "version": 3,
  "sources": ["../lib/builtin.js", "../lib/polyfill.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) object properties.\n*\n* @name defineProperties\n* @type {Function}\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nvar defineProperties = Object.defineProperties;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperties;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isObject = require( '@stdlib/assert-is-object' );\nvar objectKeys = require( '@stdlib/utils-keys' );\nvar defineProperty = require( '@stdlib/utils-define-property' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Defines (and/or modifies) properties.\n*\n* @param {Object} obj - object on which to define the properties\n* @param {Object} props - object with property descriptors\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} second argument must be an object\n* @returns {Object} object with added and/or modified properties\n*\n* @example\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar'\n*     },\n*     'baz': {\n*          'value': 13\n*     }\n* });\n*\n* var val = obj.foo;\n* // returns 'bar'\n*\n* val = obj.baz;\n* // returns 13\n*/\nfunction defineProperties( obj, props ) {\n\tvar keys;\n\tvar name;\n\tvar i;\n\n\tif ( !isObject( obj ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an object. Value: `%s`.', obj ) );\n\t}\n\tif ( !isObject( props ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be an object containing property descriptors. Value: `%s`.', props ) );\n\t}\n\tkeys = objectKeys( props );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tname = keys[ i ];\n\t\tdefineProperty( obj, name, props[ name ] );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperties;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (and/or modify) properties.\n*\n* @module @stdlib/utils-define-properties\n*\n* @example\n* var defineProperties = require( '@stdlib/utils-define-properties' );\n*\n* var obj = {};\n* defineProperties( obj, {\n*     'foo': {\n*         'value': 'bar',\n*         'writable': false,\n*         'configurable': false,\n*         'enumerable': true\n*     },\n*     'baz': {\n*         'value': 13\n*     }\n* });\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.log( err.message );\n* }\n*/\n\n// MODULES //\n\nvar hasDefinePropertiesSupport = require( '@stdlib/assert-has-define-properties-support' ); // eslint-disable-line id-length\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperties;\nif ( hasDefinePropertiesSupport() ) {\n\tdefineProperties = builtin;\n} else {\n\tdefineProperties = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperties;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAkDA,IAAIC,EAAmB,OAAO,iBAK9BD,EAAO,QAAUC,ICvDjB,IAAAC,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAC/CC,EAAa,QAAS,oBAAqB,EAC3CC,EAAiB,QAAS,+BAAgC,EAC1DC,EAAS,QAAS,uBAAwB,EA+B9C,SAASC,EAAkBC,EAAKC,EAAQ,CACvC,IAAIC,EACAC,EACA,EAEJ,GAAK,CAACR,EAAUK,CAAI,EACnB,MAAM,IAAI,UAAWF,EAAQ,mEAAoEE,CAAI,CAAE,EAExG,GAAK,CAACL,EAAUM,CAAM,EACrB,MAAM,IAAI,UAAWH,EAAQ,oGAAqGG,CAAM,CAAE,EAG3I,IADAC,EAAON,EAAYK,CAAM,EACnB,EAAI,EAAG,EAAIC,EAAK,OAAQ,IAC7BC,EAAOD,EAAM,CAAE,EACfL,EAAgBG,EAAKG,EAAMF,EAAOE,CAAK,CAAE,EAE1C,OAAOH,CACR,CAKAN,EAAO,QAAUK,IC5BjB,IAAIK,EAA6B,QAAS,8CAA+C,EACrFC,EAAU,IACVC,EAAW,IAKXC,EACCH,EAA2B,EAC/BG,EAAmBF,EAEnBE,EAAmBD,EAMpB,OAAO,QAAUC",
  "names": ["require_builtin", "__commonJSMin", "exports", "module", "defineProperties", "require_polyfill", "__commonJSMin", "exports", "module", "isObject", "objectKeys", "defineProperty", "format", "defineProperties", "obj", "props", "keys", "name", "hasDefinePropertiesSupport", "builtin", "polyfill", "defineProperties"]
}
